/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-12-13 13:15:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.File;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import org.w3c.dom.Element;
import payments.types_of_payments;
import payments.Payment;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    \n");
      out.write("    <title>Internet banking</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"style1.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"style.css\">\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("<div class=\"container\">\n");
      out.write("    <h1 class=\"page-title\">Payments</h1>\n");
      out.write("    ");

        try {
            File fXmlFile = new File("C:\\Users\\User\\Pictures\\WebApp\\src\\main\\webapp\\Payment.xml");
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(fXmlFile);

            doc.getDocumentElement().normalize();
    
      out.write("\n");
      out.write("    <table class=\"payments-table\">\n");
      out.write("        <tr>\n");
      out.write("            <th>Тип</th>\n");
      out.write("            <th>Название</th>\n");
      out.write("            <th>Номер карты</th>\n");
      out.write("            <th>Сумма</th>\n");
      out.write("            <th>Отправитель</th>\n");
      out.write("            <th>Получатель</th>\n");
      out.write("        </tr>\n");
      out.write("        ");

            NodeList payments = doc.getElementsByTagName("payments");
            double avgAmount = 0.0;
            for (int i = 0; i < payments.getLength(); i++) {
                Node nNode = payments.item(i);
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                    Element eElement = (Element) nNode;
                    new Payment(types_of_payments.convert(eElement.getAttribute("enum_type")), eElement.getElementsByTagName("name").item(0).getTextContent(), eElement.getAttribute("number_card"),  Double.parseDouble(eElement.getAttribute("amount")), eElement.getAttribute("sender"), eElement.getAttribute("recipient"));
                    avgAmount+=Double.parseDouble(eElement.getAttribute("amount"));
        
      out.write("\n");
      out.write("        <tr>\n");
      out.write("            <td>");
out.println(eElement.getAttribute("type"));
      out.write("</td>\n");
      out.write("            <td>");
out.println(eElement.getElementsByTagName("name").item(0).getTextContent());
      out.write("</td>\n");
      out.write("            <td>");
out.println(eElement.getAttribute("number_card"));
      out.write("</td>\n");
      out.write("            <td>");
out.println(eElement.getAttribute("amount"));
      out.write("</td>\n");
      out.write("            <td>");
out.println(eElement.getAttribute("sender"));
      out.write("</td>\n");
      out.write("           <td>");
out.println(eElement.getAttribute("recipient"));
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        ");

                }
            }
        
      out.write("\n");
      out.write("    </table>\n");
      out.write("    <h2 class=\"statistics\">Статистика</h2>\n");
      out.write("    <p class=\"stat\">\n");
      out.write("        ");
out.println("Общее число платежей: " + payments.getLength());
      out.write("<br>\n");
      out.write("        ");
out.println("Средняя сумма платежа : " + (avgAmount / payments.getLength()) + "BYN");
      out.write("<br>\n");
      out.write("        ");
out.println("Общее число коммунальных платежей : " + Payment.getHowManyPayment(types_of_payments.COMMUNAL_PAYMENTS));
      out.write("<br>\n");
      out.write("        ");
out.println("Общее число платежей до востребования: " + Payment.getHowManyPayment(types_of_payments.INTERNET));
      out.write("<br>\n");
      out.write("        ");
out.println("Общее число краткосрочных платежей : " + Payment.getHowManyPayment(types_of_payments.PHONE));
      out.write("<br>\n");
      out.write("        ");
out.println("Общее число долгосрочных депозитов : " + Payment.getHowManyPayment(types_of_payments.ARBITRARY_PAYMENTS));
      out.write("<br>\n");
      out.write("    </p>\n");
      out.write("    ");

        } catch (Exception e) {
            e.printStackTrace();
        }
    
      out.write("\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
